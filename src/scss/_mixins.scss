@use "variables";
/**
 * Миксины SCSS
 */

// Медиа запросы
@mixin media-up($breakpoint) {
  @if $breakpoint ==xs {
    @media (min-width: variables.$breakpoint-xs) {
      @content;
    }
  }

  @else if $breakpoint ==sm {
    @media (min-width: variables.$breakpoint-sm) {
      @content;
    }
  }

  @else if $breakpoint ==md {
    @media (min-width: variables.$breakpoint-md) {
      @content;
    }
  }

  @else if $breakpoint ==lg {
    @media (min-width: variables.$breakpoint-lg) {
      @content;
    }
  }

  @else if $breakpoint ==xl {
    @media (min-width: variables.$breakpoint-xl) {
      @content;
    }
  }

  @else if $breakpoint ==xxl {
    @media (min-width: variables.$breakpoint-xxl) {
      @content;
    }
  }
}

@mixin media-down($breakpoint) {
  @if $breakpoint ==xs {
    @media (max-width: (variables.$breakpoint-xs - 1px)) {
      @content;
    }
  }

  @else if $breakpoint ==sm {
    @media (max-width: (variables.$breakpoint-sm - 1px)) {
      @content;
    }
  }

  @else if $breakpoint ==md {
    @media (max-width: (variables.$breakpoint-md - 1px)) {
      @content;
    }
  }

  @else if $breakpoint ==lg {
    @media (max-width: (variables.$breakpoint-lg - 1px)) {
      @content;
    }
  }

  @else if $breakpoint ==xl {
    @media (max-width: (variables.$breakpoint-xl - 1px)) {
      @content;
    }
  }

  @else if $breakpoint ==xxl {
    @media (max-width: (variables.$breakpoint-xxl - 1px)) {
      @content;
    }
  }
}

// Flexbox утилиты
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Позиционирование
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin fixed-full {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}


// Формы
@mixin input-base {
  width: 100%;
  padding: variables.$spacing-sm variables.$spacing-md;
  border-bottom: variables.$border-gray;
  font-family: variables.$font-family-primary;
  font-size: variables.$font-size-sm;
  line-height: variables.$line-height-base;
  transition: variables.$transition-base;
  cursor: text;
  background-color: variables.$background-color;

  &:focus {
    outline: none;
    border-color: variables.$primary-color;
    box-shadow: 0 0 0 3px rgba(variables.$primary-color, 0.1);
  }

  &::placeholder {
    opacity: 0.5;
  }
}

// Анимации
@mixin fade-in($duration: 0.3s) {
  animation: fadeIn $duration ease-in-out;
}

@mixin slide-up($duration: 0.3s) {
  animation: slideUp $duration ease-out;
}


// Миксин для подключения шрифта
@mixin font-face($family, $file, $weight: normal, $style: normal, $display: swap) {
  @font-face {
    font-family: $family;
    src: url("#{$file}.woff2") format("woff2"),
    url("#{$file}.woff") format("woff");
    font-weight: $weight;
    font-style: $style;
    font-display: $display;
  }
}

@mixin hover {
  @media (hover: hover) {
    &:hover {
      @content;
    }
  }

  @media (hover: none) {
    &:active {
      @content;
    }
  }
}

@mixin gradient-border-bottom {
  position: relative;

  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(270deg, rgba(0, 0, 0, 0.125) 0%, rgba(0, 0, 0, 0.375) 50%, rgba(102, 102, 102, 0.125) 100%);
  }
}
@mixin gradient-border-top {
  position: relative;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(270deg, rgba(0, 0, 0, 0.125) 0%, rgba(0, 0, 0, 0.375) 50%, rgba(102, 102, 102, 0.125) 100%);
  }
}